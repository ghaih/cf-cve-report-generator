package main

import (
	"cve2csv/downloader"
	"context"
	"os"
	"fmt"
	"os/exec"
	"net/http"
	"strings"
)

func main() {
	owner := os.Args[1]
	repo := os.Args[2]
	version := os.Args[3]

	ctx := context.Background()
	cves := downloader.DownloadReleases(ctx, owner, repo, version)
    
	// Table headers
	fmt.Printf("%s|%s|%s|%s|%s|%s|%s|%s\n", "", "CVE", "URL", "CF Severity", "Ubuntu Severity", "NVD Url", "NVD Severity", "Description")
	prevCveId := ""
	for _, cve := range cves {
	    // Remove duplicate CVEs
	    if prevCveId == cve.CveId {
			continue
		} else {
			prevCveId = cve.CveId
		}

		cveURL := "https://www.cloudfoundry.org/" + cve.CveId
				
		resp, err := http.Get(cveURL)
		if resp.StatusCode == 404 {
			cveURL = "https://people.canonical.com/~ubuntu-security/cve/" + cve.CveId + ".html"
			resp, err = http.Get(cveURL)
			if resp.StatusCode == 404 {
				cveURL = "Not Found"
			} else {
				cveURL = "=HYPERLINK(\"" + cveURL + "\")"
			}
		} else {
			cveURL = "=HYPERLINK(\"" + cveURL + "\")"
		}
		
		nvdUrl:= "https://nvd.nist.gov/vuln/detail/" + cve.CveId
		resp, err = http.Get(nvdUrl)
		if resp.StatusCode == 404 {
			nvdUrl = "Not Found"
		} else {
			nvdUrl = "=HYPERLINK(\"" + nvdUrl + "\")"
		}
		
		out, err := exec.Command("grep", "-e", "^" + cve.CveId, "output/output.csv").Output()
		if err != nil {		    
			fmt.Printf("%s|%s|%s|%s|%s|%s\n", cve.Release, cve.CveId, cveURL, "", "", nvdUrl)
			continue
		}
		// out has "|" delimited data. First data is the cve id, remove it since we want it at spot 
		// and will add it at spot 2 later
		
		index := strings.Index(string(out), "|")
		cveData := out[index + 1:len(out)]
		//Added a place holder for severity(cloudfoundry and ubuntu)
		fmt.Printf("%s|%s|%s|%s|%s|%s|%s", cve.Release, cve.CveId, cveURL, "", "", nvdUrl, cveData)
	}
}
